import Head from "next/head";
import Image from "next/image";
import styles from "@/styles/Home.module.css";
import { useState } from "react";
import { useWeb3Modal } from "@web3modal/wagmi/react";
import {
  useDisconnect,
  useAccount,
  useBalance,
  useSignMessage,
  useContractRead,
  useContractReads,
  useContractWrite,
} from "wagmi";
import wagmigotchiABI from "@abi/wagmigotchiABI.json";
import mlootABI from "@abi/mlootABI.json";

export default function Home() {
  const [isNetworkSwitchHighlighted, setIsNetworkSwitchHighlighted] =
    useState(false);
  const [isConnectHighlighted, setIsConnectHighlighted] = useState(false);
  const { open, close } = useWeb3Modal();
  const { disconnect } = useDisconnect();
  const { address } = useAccount();

  //useBalance:
  const { data: balanceData } = useBalance({
    address: address,
  });
  //useSignMessage:

  const {
    data: signMessageData,
    isSuccess: signMessageSuccess,
    signMessage,
  } = useSignMessage({
    message: "gm wagmi frens",
  });

  //useContractRead:
  const { data: contractReadData, isSuccess: contractReadSuccess } =
    useContractRead({
      address: "0xecb504d39723b0be0e3a9aa33d646642d1051ee1",
      abi: wagmigotchiABI,
      functionName: "getHunger",
    });

	//useContractReads: 
	const wagmigotchiContract = {
		address: '0xecb504d39723b0be0e3a9aa33d646642d1051ee1',
		abi: wagmigotchiABI,
	  }
	  const mlootContract = {
		address: '0x1dfe7ca09e99d10835bf73044a23b73fc20623df',
		abi: mlootABI,
	  }
	  const { data: multiContractRead, isSuccess: multiContractReadSuccess } = useContractReads({
		contracts: [
		  {
			...wagmigotchiContract,
			functionName: 'getAlive',
		  },
			
		  {
			...mlootContract,
			functionName: 'getWaist',
			args: [69],
		  },
		],
	  })

  const closeAll = () => {
    setIsNetworkSwitchHighlighted(false);
    setIsConnectHighlighted(false);
  };
  return (
    <>
      <Head>
        <title>WalletConnect | Next Starter Template</title>
        <meta name="description" content="Generated by create-wc-dapp" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div>
          <div>
            <h1>Web3Modal Hooks</h1>
            <w3m-button />
            <button onClick={() => open()}>
              {address ? address : "Open/close"}
            </button>
            <button onClick={() => disconnect()}>Disconnect</button>
          </div>
          <div>
            <h1>Wagmi Hooks</h1>
            <button onClick={() => disconnect()}>useAccount</button>
            <div>{address ? address : null}</div>
            <button onClick={() => disconnect()}>useBalance</button>
            <div>
              Balance: {balanceData?.formatted} {balanceData?.symbol}
            </div>
            <button onClick={() => signMessage()}>useSignMessage</button>
            {signMessageSuccess && <div>Signature: {signMessageData}</div>}
            <button onClick={() => disconnect()}>useContractRead</button>
            <div>
              {contractReadSuccess ? contractReadData?.toString() : null}
            </div>
            <button onClick={() => disconnect()}>useContractReads</button>
			{multiContractReadSuccess ? multiContractRead?.map ((data, index) => {
				return <div key={index}>{data?.result.toString()}</div>
			}) 
			: null}
            <button onClick={() => disconnect()}>useContractWrite</button>
          </div>
        </div>
      </main>
    </>
  );
}
